name: Run Training Pipeline

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - continuous-training
  
permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  start-runner:
    name: Continuous Deployment
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0778521d914d23bc1
          ec2-instance-type: t1.micro
          subnet-id: ${{ secrets.EC2_SUBNET_ID }}
          security-group-id: ${{ secrets.EC2_SG_ID }}

      - name: Increase the EC2 EBS Volume
        id: increase-ebs-volume
        run: |
          vol_id=$(aws ec2 describe-instances --instance-ids ${{ steps.start-ec2-runner.outputs.ec2-instance-id }} | jq -r ".Reservations[0].Instances[0].BlockDeviceMappings[0].Ebs.VolumeId") 
          
          aws ec2 modify-volume --size 50 --volume-id $vol_id

    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}

  run-train:
    name: Continuous Training
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Extend the EC2 EBS Storage
        run: |
          sudo growpart /dev/xvda 1
          
          sudo resize2fs /dev/xvda1

      - name: Run the start up script
        run: |
          bash scripts/start_up.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Run the training pipeline code
        run: |
          python3 train.py

  post-train:
    name: Post Training Clean Up
    needs: 
      - run-train
      - start-runner
    runs-on: ubuntu-latest
    steps:
      - name: Terminate EC2 instance
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          aws ec2 terminate-instances --instance-ids ${{ needs.start-runner.outputs.ec2-instance-id }}

      - name: Wait for EC2 instance to be terminated
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          aws ec2 wait instance-terminated --instance-ids ${{ needs.start-runner.outputs.ec2-instance-id }}
